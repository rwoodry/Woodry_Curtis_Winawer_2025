srun --pty --mem=96GB --time=96:00:00 /bin/bash

module purge
module load anaconda3/2020.07

source activate /scratch/rfw256/oneshot/.penv

derivatives_dir=/scratch/rfw256/Interstellar/derivatives

# 1) build_glmsingle_dataframes
for subj in 114 115 127 135 136 139 141 142; do 
    python3 build_glmsingle_dataframes.py \
        --subject $subj \
        --derivatives_dir $derivatives_dir
done

# 2) build_glmdenoise_dataframes
for subj in 114 115 127 135 136 139 141 142; do
    for model in p-ltm-wm p-ltm-wm-cue-sacc p-ltm-wm-cue-sacc-wmtarget; do
        python3 build_glmdenoise_dataframes.py \
            --subject $subj \
            --model $model \
            --derivatives_dir $derivatives_dir
    done
done

# 3) build_predicted-timeseries_dataframes
for subj in 114 115 127 135 136 139 141 142; do
    for model in p-ltm-wm p-ltm-wm-cue-sacc p-ltm-wm-cue-sacc-wmtarget; do
        for model_component in all p-ltm-wm wmtarget cue sacc; do
            sbatch sbatch_build_predicted-timeseries_dataframes $subj $model $model_component
        done
    done
done
    
# 4) build_denoiseddata-timeseries_dataframes
for subj in 114 115 127 135 136 139 141 142; do
    for model in p-ltm-wm p-ltm-wm-cue-sacc p-ltm-wm-cue-sacc-wmtarget; do
        sbatch sbatch_build_denoiseddata-timeseries_dataframes $subj $model
    done
done

# 5) build_data-timeseries_dataframes
for subj in 114 115 127 135 136 139 141 142; do
    sbatch sbatch_build_data-timeseries_dataframes $subj 
done

# 6) compute_respprofile
python3 compute_respprofile.py \
    --subjects "114 115 127 135 136 139 141 142" \
    --model glmsingle \
    --derivatives_dir ../derivatives
    
for model in p-ltm-wm p-ltm-wm-cue-sacc p-ltm-wm-cue-sacc-wmtarget; do
    python3 compute_respprofile.py \
        --subjects "114 115 127 135 136 139 141 142" \
        --model $model \
        --derivatives_dir $derivatives_dir \
        --target_file vertex+dist_glmdenoise+prf+roi.tsv
done

# 7) compute_timeseries_respprofile
for model in p-ltm-wm p-ltm-wm-cue-sacc p-ltm-wm-cue-sacc-wmtarget; do
    for ts_type in predicted denoiseddata; do
        python3 compute_timeseries_respprofile.py \
            --subjects "114 115 127 135 136 139 141 142" \
            --model $model \
            --ts_type $ts_type \
            --derivatives_dir $derivatives_dir
    done
done

python3 compute_timeseries_respprofile.py \
    --subjects "114 115 127 135 136 139 141 142" \
    --model data \
    --ts_type data \
    --derivatives_dir $derivatives_dir


# 8) compute_timeseries_logfits
python3 compute_timeseries_logfits.py --derivatives_dir $derivatives_dir

# 9) Compute resp profile for tertile splits
python3 compute_respprofile.py \
    --subjects "114 115 127 135 136 139 141 142" \
    --model glmsingle \
    --derivatives_dir $derivatives_dir \
    --group_by tertile \
    --suffix saccsplit

python3 compute_respprofile.py \
    --subjects "114 115 127 135 136 139 141 142" \
    --model glmsingle \
    --derivatives_dir $derivatives_dir \
    --group_by nearest_dist_bin \
    --suffix nearmidfar


# Revision-based analyses

# 8) /notebooks/saccade_aligned_analyses.ipynb

# 7) build_glmsingle_dataframes.py and compute_respprofile.py for variations of target eccentricity bounds
#       Use sbatch_build_glmsingle_dataframes_varecc for batch jobs

for te in 6 7 8; do
    for sm in .5 1 2; do
        sbatch sbatch_build_glmsingle_dataframes_varecc $te $sm
    done
done

for te in 2 3 4 5 6 7 8 9 10 11 12; do
    sbatch sbatch_build_glmsingle_dataframes_varecc $te 1
done

# 